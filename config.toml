[database]
# The connection string to the database.
url = "postgresql://user:changeme@localhost/zeta_development"
# The maximum idle duration for individual connections.
idle_timeout = "30s"
# The maximum number of connections that the database pool should maintain.
max_connections = 5

[irc]
# The client's nickname.
nickname = "zeta[dev]"
# The hostname to connect to.
hostname = "irc.rwx.im"
# The port number to connect on.
port = 6667
alt_nicks = ["zeta[[dev]]"]
channels = { "#zeta.dev" = {} }

# [irc.channels."#zeta.dev"]

# Alternative nicknames for the client, if the default is taken.
#
# alt_nicks = ["my-bot-alt", "my-bot-alt2"]

# The client's username.
#
# username = "my-bot"

# The client's real name.
#
# realname = "My Bot"

# The port to connect on.
#
# port = 6667

# The password to connect to the server.
#
# password = "password"

# The proxy type to connect to.
# [proxy]
# proxy_type = "HTTP" # Example

# The proxy server to connect to.
#
# proxy_server = "proxy.example.com"

# The proxy port to connect on.
#
# proxy_port = 8080

# The username to connect to the proxy server.
#
# proxy_username = "proxy-user"

# The password to connect to the proxy server.
#
# proxy_password = "proxy-password"

# Whether or not to use TLS.
[irc.tls]
enabled = true

# The path to the TLS certificate for this server in DER format.
#
# cert_path = "/path/to/cert.pem"

# The path to a TLS certificate to use for CertFP client authentication in a DER-formatted
# PKCS #12 archive.
#
# client_cert_path = "/path/to/client.pfx"

# The password for the certificate to use in CertFP authentication.
#
# client_cert_pass = "password"

# On `true`, all certificate validations are skipped. Defaults to `false`.
#
# WARNING: You should think very carefully before using this method. If invalid hostnames are trusted, *any* valid
# certificate for *any* site will be trusted for use. This introduces significant vulnerabilities, and should
# only be used as a last resort. 1 
# dangerously_accept_invalid_certs = false

# The encoding type used for this connection. This is typically UTF-8, but could be something else.
#
# encoding = "UTF-8"

# User modes to set on connect. Example: "+RB -x"
#
# umodes = "+RB -x"

# The text that'll be sent in response to CTCP USERINFO requests.
#
# user_info = "This is a bot."

# The text that'll be sent in response to CTCP VERSION requests.
#
# version = "My Bot v1.0"

# The text that'll be sent in response to CTCP SOURCE requests.
#
# source = "https://github.com/example/my-bot"

# The amount of inactivity in seconds before the client will ping the server.
#
# ping_time = 300

# The amount of time in seconds for a client to reconnect due to no ping response.
#
# ping_timeout = 60

# Message throttling settings.
# The length in seconds of a rolling window for message throttling.
#
# burst_window_length = 10

# The maximum number of messages that can be sent in a burst window before they'll be delayed.
#
# max_messages_in_burst = 5

# Whether the client should use NickServ GHOST to reclaim its primary nickname if it is in use.
# This has no effect if `nick_password` is not set.
#
# should_ghost = true

# The command(s) that should be sent to NickServ to recover a nickname. The nickname and
# password will be appended in that order after the command.
# E.g. `["RECOVER", "RELEASE"]` means `RECOVER nick pass` and `RELEASE nick pass` will be sent in that order.
#
# ghost_sequence = ["RECOVER", "RELEASE"]

# A map of additional options to be stored in config.
#
# options = { "option1" = "value1", "option2" = "value2" }

[dns]
# The size in number of records the cache can hold.
# cache_size = 32

# The number of retries after lookup failure before giving up.
# attempts = 2

[plugins]
# Enable the calculator plugin.
calculator = { enabled = true }
# Enable the choices plugin.
choices = { enabled = false }
# Enable the dig plugin.
dig = { enabled = true, name_servers = ["1.1.1.1", "1.0.0.1"] }
# Enable the geoip plugin.
geoip = { enabled = true, api_key = "DDF2A8B42AA33C08344AE90D17B8CA6B" }
# Enable the google search plugin.
google_search = { enabled = true }
# Enable the health plugin.
health = { enabled = true }

[plugin.youtube]
# Enable the youtube plugin.
enabled = true
# The interval, in seconds, before the cache of video categories is considered
# expired and therefore updated.
category_update_interval = 86400

[tracing]
enabled = true
