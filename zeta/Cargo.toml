[package]
name = "zeta"
version = "0.2.5"
authors = ["Mikkel Kroman <mk@maero.dk>"]
edition = "2024"

[package.metadata.cargo-machete]
ignored = ["humantime-serde"]

[lib]
crate-type = ["lib"]

[[bin]]
name = "zeta"
path = "src/main.rs"

[features]
default = ["plugins-all"]
plugin-calculator = []
plugin-choices = []
plugin-dendanskeordbog = []
plugin-dig = []
plugin-geoip = []
plugin-google-search = []
plugin-health = []
plugin-reddit = []
plugin-string-utils = []
plugin-tiktok = []
plugin-tvmaze = []
plugin-urban-dictionary = []
plugin-youtube = []
plugins-all = [
    "plugin-calculator",
    "plugin-choices",
    "plugin-dendanskeordbog",
    "plugin-dig",
    "plugin-geoip",
    "plugin-google-search",
    "plugin-health",
    "plugin-reddit",
    "plugin-string-utils",
    "plugin-tiktok",
    "plugin-tvmaze",
    "plugin-urban-dictionary",
    "plugin-youtube",
]

[dependencies]
argh = "0.1.12"
async-trait = "0.1.83"
dendanskeordbog = { path = "../dendanskeordbog", features = ["client"] }
figment = { version = "0.10.19", features = ["toml", "env"] }
futures = "0.3.31"
hickory-resolver = { version = "0.25.2", features = ["h3-aws-lc-rs"] }
humantime-serde = "1.1.1"
irc = { version = "1.0.0", default-features = false, features = ["serde", "tls-native", "ctcp", "channel-lists"] }
memory-stats = "1.2.0"
miette = { version = "7.2.0", features = ["fancy"] }
num-format = "0.4.4"
opentelemetry = "0.30.0"
opentelemetry-otlp = "0.30.0"
opentelemetry-resource-detectors = "0.9.0"
# opentelemetry-semantic-conventions = "0.30.0"
# opentelemetry-stdout = "0.30.0"
opentelemetry_sdk = { version = "0.30.0", features = ["rt-tokio"] }
rand = "0.9.2"
reqwest = { workspace = true, features = ["json", "stream"] }
rink-core = { version = "0.8.0", features = ["bundle-files"] }
scraper = { workspace = true }
serde = { version = "1.0.215", features = ["derive"] }
serde_json = "1.0.140"
serde_path_to_error = "0.1.17"
shlex = "1.3.0"
sqlx = { version = "0.8.6", default-features = false, features = ["migrate", "macros", "postgres", "runtime-tokio-native-tls", "time"] }
thiserror = "2.0"
time = { version = "0.3.43", features = ["formatting", "parsing", "serde"] }
tokio = { workspace = true, features = ["full"] }
tracing = "0.1.40"
tracing-opentelemetry = { version = "0.31.0", features = ["thiserror"] }
tracing-subscriber = { version = "0.3.18", features = ["env-filter", "json"] }
url = "2.5.4"

[dev-dependencies]
wildmatch = "=2.5.0"

[lints.clippy]
# Enable all basic clippy lints
all = "warn"
# Enable pedantic lints for stricter code quality
pedantic = "warn"
# Enable experimental/unstable lints that may have false positives
nursery = "warn"
# Disable cargo-related lints (often too noisy for dependencies)
cargo = "allow"
# Disable markdown formatting enforcement in doc comments
doc_markdown = "allow"
# Allow for higher complexity since it's not a reliable estimate
cognitive_complexity = "allow"

[lints.rust]
# Completely disallow unsafe code - no unsafe blocks, functions, or traits
unsafe_code = "forbid"
# Require documentation for public items
missing_docs = "warn"
# Enforce modern Rust 2018+ idioms and patterns
rust_2018_idioms = "warn"
# Catch unnecessary casts between identical types
trivial_casts = "warn"
# Catch unnecessary numeric type casts (e.g., u32 as u32)
trivial_numeric_casts = "warn"
# Warn when import braces are used unnecessarily (use foo::{bar} vs use foo::bar)
unused_import_braces = "warn"
# Catch redundant path qualifications (self::foo when foo would suffice)
unused_qualifications = "warn"
